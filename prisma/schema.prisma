generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customers {
  id             Int       @id @default(autoincrement())
  first_name     String?   @db.VarChar(100)
  last_name      String?   @db.VarChar(100)
  phone_number   String?   @db.VarChar(10)
  email_address  String?   @db.VarChar(500)
  rewards_points Int?      @default(0)
  created_at     DateTime? @default(now()) @db.DateTime(0)
  updated_at     DateTime? @default(now()) @db.DateTime(0)
  orders         orders[]
}

model employees {
  id                 Int       @id @default(autoincrement())
  first_name         String?   @db.VarChar(100)
  last_name          String?   @db.VarChar(100)
  phone_number       String?   @db.VarChar(10)
  street_address     String?   @db.VarChar(500)
  city_address       String?   @db.VarChar(100)
  state_address      String?   @db.VarChar(100)
  last_check_in_time DateTime? @db.DateTime(0)
  is_on_shift        Boolean?
  employee_role      String?   @db.VarChar(100)
  created_at         DateTime? @default(now()) @db.DateTime(0)
  updated_at         DateTime? @default(now()) @db.DateTime(0)
  orders             orders[]
}

model orders {
  id              Int               @id @default(autoincrement())
  customer_id     Int?
  employee_id     Int?
  created_at      DateTime?         @default(now()) @db.DateTime(0)
  customers       customers?        @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "orders_ibfk_1")
  employees       employees?        @relation(fields: [employee_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "orders_ibfk_2")
  orders_products orders_products[]

  @@index([customer_id], map: "customer_id")
  @@index([employee_id], map: "employee_id")
}

model orders_products {
  id         Int      @id @default(autoincrement())
  order_id   Int
  product_id Int
  orders     orders   @relation(fields: [order_id], references: [id], onUpdate: Restrict, map: "orders_products_ibfk_1")
  products   products @relation(fields: [product_id], references: [sku], onUpdate: Restrict, map: "orders_products_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model products {
  sku             Int               @id @default(autoincrement())
  item            String?           @db.VarChar(1000)
  category        String?           @db.VarChar(300)
  price           Decimal?          @db.Decimal(6, 2)
  orders_products orders_products[]
}
